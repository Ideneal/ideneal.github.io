{"version":3,"sources":["components/Menu.js","components/Logo.js","utility/path.js","components/NavBar.js","components/Copyright.js","components/Footer.js","components/Socials.js","constants/socials.js","pages/Home.js","components/PostsList.js","utility/list.js","constants/posts.js","pages/Posts.js","constants/routes.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","link","margin","spacing","withWidth","width","routes","useState","anchorEl","setAnchorEl","classes","handleClose","includes","Fragment","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","map","route","index","MenuItem","key","component","RouterLink","to","path","label","Link","variant","color","className","Logo","location","useLocation","paths","useMemo","pathname","locations","substring","split","slice","join","splitPathname","Breadcrumbs","Typography","arr","length","appbar","backgroundColor","flexDirection","toolbar","breakpoints","values","sm","logo","flexGrow","NavBar","AppBar","position","Toolbar","Copyright","href","Date","getFullYear","footer","padding","textAlign","opacity","Footer","Container","maxWidth","socialLink","Socials","socials","social","url","icon","Twitter","Github","Linkedin","Medium","presentation","Home","gutterBottom","ul","ListItemLink","props","ListItem","button","PostsList","posts","postsGroupedByYear","selector","item","dayjs","date","$y","reduce","result","push","List","Object","keys","year","ListSubheader","post","ListItemIcon","ListItemText","primary","title","secondary","description","Divider","ReactJs","Php","Jsonwebtokens","Symfony","Posts","render","createMuiTheme","palette","type","root","display","minHeight","alignItems","justifyContent","main","App","ThemeProvider","CssBaseline","exact","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.10d368d6.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\nimport withWidth from \"@material-ui/core/withWidth\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Menu as MuiMenu} from \"@material-ui/core\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Link from \"@material-ui/core/Link\";\n\n\nconst useStyles = makeStyles(theme => ({\n    link: {\n        margin: theme.spacing(1, 1.5),\n    }\n}));\n\n\nconst Menu = ({width, routes}) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return ['xs', 'sm'].includes(width) ? (\n        <React.Fragment>\n            <IconButton\n                aria-label=\"more\"\n                aria-controls=\"long-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <MuiMenu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {routes.map((route, index) => (\n                    <MenuItem key={`menu-${index}`} component={RouterLink} to={route.path} onClick={handleClose}>\n                        {route.label}\n                    </MenuItem>\n                ))}\n            </MuiMenu>\n        </React.Fragment>\n    ) : (\n        <nav>\n            {routes.map((route, index) => (\n                <Link key={`menu-${index}`} variant=\"button\" color=\"textPrimary\" component={RouterLink} to={route.path} className={classes.link}>\n                    {route.label}\n                </Link>\n            ))}\n        </nav>\n    );\n};\n\nMenu.propTypes = {\n    width: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs']).isRequired,\n    routes: PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        path: PropTypes.string.isRequired,\n    })).isRequired,\n};\n\nexport default withWidth()(Menu);","import React, {useMemo} from \"react\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport {splitPathname} from \"../utility/path\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\n\n\nconst Logo = () => {\n    const location = useLocation()\n    const paths = useMemo(() => splitPathname(location.pathname), [location]);\n\n    return (\n        <Breadcrumbs aria-label=\"breadcrumb\">\n            <Typography color=\"textPrimary\"># cd </Typography>\n            <Typography color=\"textPrimary\" component={Link} to=\"/\">home</Typography>\n            {paths.map((path, index, arr) => (index === arr.length - 1) ? (\n                <Typography key={`path-${index}`} color=\"textPrimary\">{path.label}</Typography>\n            ) : (\n                <Typography key={`path-${index}`} color=\"textPrimary\" component={Link} to={path.path}>{path.label}</Typography>\n            ))}\n        </Breadcrumbs>\n    );\n};\n\nexport default Logo;","export function splitPathname(pathname) {\n    const locations = pathname.substring(1).split('/');\n    return locations.map((location, index) => {\n        return {\n            label: location,\n            path: '/' + locations.slice(0, index + 1).join('/')\n        }\n    });\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Menu from \"./Menu\";\nimport Logo from \"./Logo\";\n\n\nconst useStyles = makeStyles(theme => ({\n    appbar: {\n        backgroundColor: '#252627',\n        flexDirection: 'row',\n    },\n    toolbar: {\n        width: theme.breakpoints.values.sm,\n        margin: 'auto',\n    },\n    logo: {\n        flexGrow: 1,\n    },\n}));\n\n\nconst NavBar = ({routes}) => {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\" className={classes.appbar}>\n            <Toolbar className={classes.toolbar}>\n                <div className={classes.logo}>\n                    <Logo/>\n                </div>\n                <Menu routes={routes}/>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nNavBar.propTypes = {\n    routes: PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        path: PropTypes.string.isRequired,\n    })).isRequired,\n};\n\nexport default NavBar;","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\n\nconst Copyright = () => (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://ideneal.github.io/\">\n            Ideneal\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n    </Typography>\n);\n\nexport default Copyright;","import React from \"react\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Copyright from \"./Copyright\";\n\n\nconst useStyles = makeStyles(theme => ({\n    footer: {\n        padding: theme.spacing(3, 2),\n        textAlign: 'center',\n        opacity: 0.6,\n    }\n}));\n\n\nconst Footer = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.footer}>\n            <Container maxWidth=\"sm\">\n                <Copyright/>\n            </Container>\n        </div>\n    );\n};\n\nexport default Footer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\n\n\nconst useStyles = makeStyles(theme => ({\n    socialLink: {\n        margin: theme.spacing(2),\n        color: 'white',\n    },\n}));\n\n\nconst Socials = ({socials}) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {socials.map((social, index) => (\n                <Link key={`social-${index}`} href={social.url} className={classes.socialLink}>\n                    {social.icon}\n                </Link>\n            ))}\n        </React.Fragment>\n    );\n};\n\nSocials.propTypes = {\n    socials: PropTypes.arrayOf(\n        PropTypes.shape({\n            url: PropTypes.string.isRequired,\n            icon: PropTypes.element.isRequired,\n        }),\n    ).isRequired,\n};\n\nexport default Socials;","import React from \"react\";\nimport {Twitter, Github, Linkedin, Medium} from \"@icons-pack/react-simple-icons\";\n\nexport default [\n    {\n        url: 'https://twitter.com/ideneal',\n        icon: <Twitter/>,\n    },\n    {\n        url: 'https://github.com/Ideneal',\n        icon: <Github/>,\n    },\n    {\n        url: 'https://www.linkedin.com/in/danielepedone/',\n        icon: <Linkedin/>,\n    },\n    {\n        url: 'https://medium.com/@ideneal',\n        icon: <Medium/>,\n    },\n];","import React from \"react\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Socials from \"../components/Socials\";\n\nimport socials from \"../constants/socials\";\n\n\nconst useStyles = makeStyles(theme => ({\n    presentation: {\n        textAlign: 'center'\n    }\n}));\n\n\nconst Home = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.presentation}>\n            <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n                Ideneal\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                Full Stack Developer & Security Enthusiast\n            </Typography>\n            <Socials socials={socials}/>\n        </div>\n    );\n};\n\nexport default Home;","import React, {useMemo} from \"react\";\nimport PropTypes from \"prop-types\";\nimport dayjs from \"dayjs\";\nimport {groupBy} from \"../utility/list\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Divider from \"@material-ui/core/Divider\";\n\n\nconst useStyles = makeStyles(theme => ({\n    ul: {\n        backgroundColor: '#303030',\n        padding: 0,\n    },\n}));\n\n\nconst ListItemLink = props => <ListItem button component=\"a\" {...props}/>;\n\n\nconst PostsList = ({posts}) => {\n    const classes = useStyles();\n    const postsGroupedByYear = useMemo(() => groupBy(posts, item => dayjs(item.date).$y), [posts]);\n\n    return (\n        <List>\n            {Object.keys(postsGroupedByYear).map(year => (\n                <li key={`posts-${year}`}>\n                    <ul className={classes.ul}>\n                        <ListSubheader>{year}</ListSubheader>\n                        {postsGroupedByYear[year].map((post, index) => (\n                            <React.Fragment key={`post-${index}`}>\n                                <ListItemLink href={post.url}>\n                                    <ListItemIcon>\n                                        {post.icon}\n                                    </ListItemIcon>\n                                    <ListItemText primary={post.title} secondary={post.description}/>\n                                </ListItemLink>\n                                <Divider variant=\"inset\"/>\n                            </React.Fragment>\n                        ))}\n                    </ul>\n                </li>\n            ))}\n        </List>\n    );\n};\n\nPostsList.propTypes = {\n    posts: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            description: PropTypes.string,\n            date: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n            icon: PropTypes.element.isRequired,\n        }),\n    ).isRequired,\n};\n\nexport default PostsList;","export function groupBy(array, selector) {\n    return array.reduce((result, item) => {\n        const key = (typeof selector === 'function') ? selector(item) : item[selector];\n        (result[key] = result[key] || []).push(item)\n        return result;\n    }, {});\n}","import React from \"react\";\nimport {ReactJs, Php, Jsonwebtokens, Symfony} from \"@icons-pack/react-simple-icons\";\n\nexport default [\n    {\n        title: 'PHPUnit — Mocking the real file system',\n        date: '2019-10-15',\n        description: 'How to use a stream wrapper for a virtual file system and have fun!',\n        url: 'https://medium.com/swlh/phpunit-mocking-the-real-file-system-f6da6d1802cf',\n        icon: <ReactJs/>,\n    },\n    {\n        title: 'SOLID Principles Simplified with Examples in PHP',\n        date: '2019-08-23',\n        description: 'The SOLID principles that every developer should know',\n        url: 'https://levelup.gitconnected.com/solid-principles-simplified-php-examples-based-dc6b4f8861f6',\n        icon: <Php/>,\n    },\n    {\n        title: 'Why using hash based urls in your React SPA will save you more time than you think?',\n        date: '2019-07-24',\n        description: null,\n        url: 'https://itnext.io/why-using-hash-based-urls-in-your-react-spa-will-save-you-more-time-than-you-think-a21e2c560879',\n        icon: <ReactJs/>,\n    },\n    {\n        title: 'Securing Authentication in a SPA Using JWT Token — The coolest way',\n        date: '2019-07-08',\n        description: 'In this post we will explore the right way to use JWT token in a Single Page Application and HOW to manage it in order to avoid security issues.',\n        url: 'https://medium.com/@ideneal/securing-authentication-in-a-spa-using-jwt-token-the-coolest-way-ab883bc372b6',\n        icon: <Jsonwebtokens/>,\n    },\n    {\n        title: 'How to handle JSON requests using forms on Symfony 4 and getting a clean code',\n        date: '2019-07-02',\n        description: 'The cleanest way to deal with JSON form request',\n        url: 'https://medium.com/@ideneal/how-to-handle-json-requests-using-forms-on-symfony-4-and-getting-a-clean-code-67dd796f3d2f',\n        icon: <Symfony/>,\n    },\n    {\n        title: 'Symfony 4 — A good way to deal with exceptions for REST API',\n        date: '2019-06-19',\n        description: null,\n        url: 'https://medium.com/@ideneal/symfony-4-a-good-way-to-deal-with-exceptions-for-rest-api-afd8b615c923',\n        icon: <Symfony/>,\n    },\n    {\n        title: 'How to export Symfony 4 environment variables into front-end application with Encore',\n        date: '2019-05-26',\n        description: null,\n        url: 'https://medium.com/@ideneal/how-to-export-symfony-4-environment-variables-into-front-end-application-with-encore-ed45463bee5a',\n        icon: <Symfony/>,\n    },\n];","import React from \"react\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport PostsList from \"../components/PostsList\";\nimport posts from \"../constants/posts\";\n\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        margin: theme.spacing(4, 0),\n        padding: theme.spacing(0, 2)\n    },\n}));\n\n\nconst Posts = () => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h3\" className={classes.title}>Posts</Typography>\n            <PostsList posts={posts}/>\n        </React.Fragment>\n    );\n};\n\nexport default Posts;","import React from \"react\";\nimport Posts from \"../pages/Posts\";\n\nexport default [\n    {\n        label: 'Posts',\n        path: '/posts',\n        render: <Posts/>,\n    },\n];","import React from 'react';\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\n\nimport {createMuiTheme, ThemeProvider, makeStyles} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\n\nimport routes from \"./constants/routes\";\n\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\"\n    }\n})\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    main: {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column',\n        justifyContent: 'center'\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <HashRouter>\n                <div className={classes.root}>\n                    <CssBaseline/>\n                    <NavBar routes={routes}/>\n                    <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Home/>\n                            </Route>\n                            {routes.map((route, index) => (\n                                <Route key={`route-${index}`} path={route.path}>\n                                    {route.render}\n                                </Route>\n                            ))}\n                        </Switch>\n                    </Container>\n                    <Footer/>\n                </div>\n            </HashRouter>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}